
sevenSegmentCode.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000196  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         0000000a  00800060  00000196  0000020a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000030  00000000  00000000  00000214  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000244  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000020  00000000  00000000  00000280  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000006c0  00000000  00000000  000002a0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000005bd  00000000  00000000  00000960  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000002da  00000000  00000000  00000f1d  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000034  00000000  00000000  000011f8  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    0000037f  00000000  00000000  0000122c  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    0000016d  00000000  00000000  000015ab  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000010  00000000  00000000  00001718  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
   8:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
   c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  10:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  14:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  18:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  1c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  20:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  24:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  28:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  2c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  30:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  34:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  38:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  3c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  40:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  44:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  48:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  4c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  50:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	e6 e9       	ldi	r30, 0x96	; 150
  68:	f1 e0       	ldi	r31, 0x01	; 1
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	aa 36       	cpi	r26, 0x6A	; 106
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>
  76:	0e 94 41 00 	call	0x82	; 0x82 <main>
  7a:	0c 94 c9 00 	jmp	0x192	; 0x192 <_exit>

0000007e <__bad_interrupt>:
  7e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000082 <main>:
#include <util/delay.h>
#include <avr/io.h>


int main(void)
{
  82:	cf 93       	push	r28
  84:	df 93       	push	r29
  86:	cd b7       	in	r28, 0x3d	; 61
  88:	de b7       	in	r29, 0x3e	; 62
  8a:	2a 97       	sbiw	r28, 0x0a	; 10
  8c:	0f b6       	in	r0, 0x3f	; 63
  8e:	f8 94       	cli
  90:	de bf       	out	0x3e, r29	; 62
  92:	0f be       	out	0x3f, r0	; 63
  94:	cd bf       	out	0x3d, r28	; 61
    /* Replace with your application code */
	DDRB |= 0xff;
  96:	87 b3       	in	r24, 0x17	; 23
  98:	8f ef       	ldi	r24, 0xFF	; 255
  9a:	87 bb       	out	0x17, r24	; 23
	PORTB |= 0xff; 
  9c:	98 b3       	in	r25, 0x18	; 24
  9e:	88 bb       	out	0x18, r24	; 24
	PORTB &= 0b11101000;
  a0:	88 b3       	in	r24, 0x18	; 24
  a2:	88 7e       	andi	r24, 0xE8	; 232
  a4:	88 bb       	out	0x18, r24	; 24
	DDRA &= 0x00;
  a6:	8a b3       	in	r24, 0x1a	; 26
  a8:	1a ba       	out	0x1a, r1	; 26
	char pushButtonValue = 0;
	int counter = 0;
	int counter2= 9;
	unsigned char sevenSegmantVlaues[] = {0x00,0x01,0x02,0x03,0x04,0x05,0x06,0x07,0x10,0x11}; 
  aa:	8a e0       	ldi	r24, 0x0A	; 10
  ac:	e0 e6       	ldi	r30, 0x60	; 96
  ae:	f0 e0       	ldi	r31, 0x00	; 0
  b0:	de 01       	movw	r26, r28
  b2:	11 96       	adiw	r26, 0x01	; 1
  b4:	01 90       	ld	r0, Z+
  b6:	0d 92       	st	X+, r0
  b8:	8a 95       	dec	r24
  ba:	e1 f7       	brne	.-8      	; 0xb4 <main+0x32>
	PORTB |= 0xff; 
	PORTB &= 0b11101000;
	DDRA &= 0x00;
	char pushButtonValue = 0;
	int counter = 0;
	int counter2= 9;
  bc:	49 e0       	ldi	r20, 0x09	; 9
  be:	50 e0       	ldi	r21, 0x00	; 0
	DDRB |= 0xff;
	PORTB |= 0xff; 
	PORTB &= 0b11101000;
	DDRA &= 0x00;
	char pushButtonValue = 0;
	int counter = 0;
  c0:	20 e0       	ldi	r18, 0x00	; 0
  c2:	30 e0       	ldi	r19, 0x00	; 0
	unsigned char sevenSegmantVlaues[] = {0x00,0x01,0x02,0x03,0x04,0x05,0x06,0x07,0x10,0x11}; 

    while (1) 
    {
		
		PORTB |= 0b00100000;
  c4:	88 b3       	in	r24, 0x18	; 24
  c6:	80 62       	ori	r24, 0x20	; 32
  c8:	88 bb       	out	0x18, r24	; 24
		PORTB &= 0b10111111;
  ca:	88 b3       	in	r24, 0x18	; 24
  cc:	8f 7b       	andi	r24, 0xBF	; 191
  ce:	88 bb       	out	0x18, r24	; 24
		PORTB &= 0xE8;
  d0:	88 b3       	in	r24, 0x18	; 24
  d2:	88 7e       	andi	r24, 0xE8	; 232
  d4:	88 bb       	out	0x18, r24	; 24
		PORTB |= sevenSegmantVlaues[counter];
  d6:	98 b3       	in	r25, 0x18	; 24
  d8:	e1 e0       	ldi	r30, 0x01	; 1
  da:	f0 e0       	ldi	r31, 0x00	; 0
  dc:	ec 0f       	add	r30, r28
  de:	fd 1f       	adc	r31, r29
  e0:	e2 0f       	add	r30, r18
  e2:	f3 1f       	adc	r31, r19
  e4:	80 81       	ld	r24, Z
  e6:	89 2b       	or	r24, r25
  e8:	88 bb       	out	0x18, r24	; 24
		
		pushButtonValue = ((PINA&(1<<0))>>0);
  ea:	89 b3       	in	r24, 0x19	; 25
		
		if(pushButtonValue == 1){
  ec:	98 2f       	mov	r25, r24
  ee:	91 70       	andi	r25, 0x01	; 1
  f0:	80 ff       	sbrs	r24, 0
  f2:	29 c0       	rjmp	.+82     	; 0x146 <main+0xc4>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  f4:	6f ef       	ldi	r22, 0xFF	; 255
  f6:	73 ec       	ldi	r23, 0xC3	; 195
  f8:	89 e0       	ldi	r24, 0x09	; 9
  fa:	61 50       	subi	r22, 0x01	; 1
  fc:	70 40       	sbci	r23, 0x00	; 0
  fe:	80 40       	sbci	r24, 0x00	; 0
 100:	e1 f7       	brne	.-8      	; 0xfa <main+0x78>
 102:	00 c0       	rjmp	.+0      	; 0x104 <main+0x82>
 104:	00 00       	nop
			_delay_ms(200);
			if(pushButtonValue == 1){
 106:	91 30       	cpi	r25, 0x01	; 1
 108:	f1 f4       	brne	.+60     	; 0x146 <main+0xc4>
				
				counter++;
 10a:	2f 5f       	subi	r18, 0xFF	; 255
 10c:	3f 4f       	sbci	r19, 0xFF	; 255
				if (counter > 9)
 10e:	2a 30       	cpi	r18, 0x0A	; 10
 110:	31 05       	cpc	r19, r1
 112:	64 f0       	brlt	.+24     	; 0x12c <main+0xaa>
				{
					counter2++;
 114:	4f 5f       	subi	r20, 0xFF	; 255
 116:	5f 4f       	sbci	r21, 0xFF	; 255
					if(counter2 > 9){
 118:	4a 30       	cpi	r20, 0x0A	; 10
 11a:	51 05       	cpc	r21, r1
 11c:	1c f4       	brge	.+6      	; 0x124 <main+0xa2>
						counter2=0;
					}
					counter = 0;
 11e:	20 e0       	ldi	r18, 0x00	; 0
 120:	30 e0       	ldi	r19, 0x00	; 0
 122:	04 c0       	rjmp	.+8      	; 0x12c <main+0xaa>
				counter++;
				if (counter > 9)
				{
					counter2++;
					if(counter2 > 9){
						counter2=0;
 124:	40 e0       	ldi	r20, 0x00	; 0
 126:	50 e0       	ldi	r21, 0x00	; 0
					}
					counter = 0;
 128:	20 e0       	ldi	r18, 0x00	; 0
 12a:	30 e0       	ldi	r19, 0x00	; 0
				}
				PORTB &= 0xE8;
 12c:	88 b3       	in	r24, 0x18	; 24
 12e:	88 7e       	andi	r24, 0xE8	; 232
 130:	88 bb       	out	0x18, r24	; 24
				PORTB |= sevenSegmantVlaues[counter];
 132:	98 b3       	in	r25, 0x18	; 24
 134:	e1 e0       	ldi	r30, 0x01	; 1
 136:	f0 e0       	ldi	r31, 0x00	; 0
 138:	ec 0f       	add	r30, r28
 13a:	fd 1f       	adc	r31, r29
 13c:	e2 0f       	add	r30, r18
 13e:	f3 1f       	adc	r31, r19
 140:	80 81       	ld	r24, Z
 142:	89 2b       	or	r24, r25
 144:	88 bb       	out	0x18, r24	; 24
 146:	9f ef       	ldi	r25, 0xFF	; 255
 148:	66 e7       	ldi	r22, 0x76	; 118
 14a:	71 e0       	ldi	r23, 0x01	; 1
 14c:	91 50       	subi	r25, 0x01	; 1
 14e:	60 40       	sbci	r22, 0x00	; 0
 150:	70 40       	sbci	r23, 0x00	; 0
 152:	e1 f7       	brne	.-8      	; 0x14c <main+0xca>
 154:	00 c0       	rjmp	.+0      	; 0x156 <main+0xd4>
 156:	00 00       	nop
				
			}
		}

		_delay_ms(30);
		PORTB |= 0b01000000;
 158:	88 b3       	in	r24, 0x18	; 24
 15a:	80 64       	ori	r24, 0x40	; 64
 15c:	88 bb       	out	0x18, r24	; 24
		PORTB &= 0b11011111;
 15e:	88 b3       	in	r24, 0x18	; 24
 160:	8f 7d       	andi	r24, 0xDF	; 223
 162:	88 bb       	out	0x18, r24	; 24
		PORTB &= 0xE8;
 164:	88 b3       	in	r24, 0x18	; 24
 166:	88 7e       	andi	r24, 0xE8	; 232
 168:	88 bb       	out	0x18, r24	; 24
		PORTB |= sevenSegmantVlaues[(counter2)];
 16a:	98 b3       	in	r25, 0x18	; 24
 16c:	e1 e0       	ldi	r30, 0x01	; 1
 16e:	f0 e0       	ldi	r31, 0x00	; 0
 170:	ec 0f       	add	r30, r28
 172:	fd 1f       	adc	r31, r29
 174:	e4 0f       	add	r30, r20
 176:	f5 1f       	adc	r31, r21
 178:	80 81       	ld	r24, Z
 17a:	89 2b       	or	r24, r25
 17c:	88 bb       	out	0x18, r24	; 24
 17e:	8f ef       	ldi	r24, 0xFF	; 255
 180:	96 e7       	ldi	r25, 0x76	; 118
 182:	61 e0       	ldi	r22, 0x01	; 1
 184:	81 50       	subi	r24, 0x01	; 1
 186:	90 40       	sbci	r25, 0x00	; 0
 188:	60 40       	sbci	r22, 0x00	; 0
 18a:	e1 f7       	brne	.-8      	; 0x184 <main+0x102>
 18c:	00 c0       	rjmp	.+0      	; 0x18e <main+0x10c>
 18e:	00 00       	nop
 190:	99 cf       	rjmp	.-206    	; 0xc4 <main+0x42>

00000192 <_exit>:
 192:	f8 94       	cli

00000194 <__stop_program>:
 194:	ff cf       	rjmp	.-2      	; 0x194 <__stop_program>
